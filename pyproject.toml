[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "tilepy"
description = "Computation of the tiling scheduling of large localization uncertainty region event with multi-wavelength pointing telescopes."
readme = "README.md"
authors = [
    {name = "Monica Seglar-Arroyo, Halim Ashkar, Fabian Schussler, Mathieu de Bony", email = "astro.tilepy@gmail.com"},
]
maintainers = [
    {name = "Monica Seglar-Arroyo", email = "mosear2@gmail.com"},
    {name = "Halim Ashkar", email = "halim.ashkar@llr.in2p3.fr"},
    {name = "Fabian Schussler", email = "fabian.schussler@cea.fr"},
    {name = "Mathieu de Bony", email = "mathieu.debony@cea.fr"},
]
license = {file = "LICENSE.rst"}
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Development Status :: 5 - Production/Stable",
]

dynamic = ["version"]
requires-python = ">=3.9"

dependencies = [
          'astropy',
          'scipy<1.14.0',
          'numpy',
          'healpy==1.16.2',
          'ipython',
          'matplotlib<3.9.0',
          'MOCpy',
          'pandas',
          'pytz',
          'ephem',
          'gdpyc',
          'tables',
          'fastparquet',
          'skyfield',
          'mhealpy>=0.3.0,<0.4',
          'ligo.skymap>=2.0.0',
          "scikit-learn>=1.6.1",
]

[project.optional-dependencies]
tests = [
    "pytest >= 7.0",
    "pytest-cov",
    "pytest-doctestplus",
    "tomli",
    "nbmake>=1.5.5",
]

docs = [
    "numpy<2",
    "python-ligo-lw",
    "sphinx>=1.6",
    "sphinx-astropy[confv2]",
    "sphinxcontrib-typer",
    "sphinxcontrib-bibtex",
    "sphinx-design",
    "ipykernel",
    "nbsphinx",
    "sphinx-gallery",
    "astropy-sphinx-theme @ git+https://github.com/astropy/sphinx-astropy-theme.git",
    "sphinx-automodapi @ git+https://github.com/astropy/sphinx-automodapi",
]

dev = [
    "setuptools_scm[toml]",
    "pre-commit>=4.1.0",
    "flake8>=7.1.2",
    "black>=25.1.0",
    "sphinxcontrib-bibtex",
    "pytest-astropy",
]

all = [
    # self-reference with all extras to simplify
    "tilepy[tests,dev]",
]

[project.scripts]
Tiling_Observations = "tilepy.scripts.Tiling_Observations:main"
PlottingTwoCampaigns = "tilepy.scripts.PlottingTwoCampaigns:main"
ConvertGalaxyCatalog = "tilepy.tools.ConvertGalaxyCatalog:main"


[project.urls]
repository = "https://github.com/astro-transients/tilepy"
documentation = "https://github.com/astro-transients/tilepy"
Homepage = "https://tilepy.readthedocs.io/"
"Bug Tracker" = "https://github.com/astro-transients/tilepy/issues"
"Documentation" = "https://tilepy.readthedocs.io/"
"GitHub" = "https://github.com/astro-transients/tilepy"

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
where = ["src"]
exclude = [
    "tilepy._dev_version",
]

[tool.setuptools_scm]
write_to = "src/tilepy/_version.py"

[tool.pytest.ini_options]
testpaths = [
    "tests",
   #"src/tilepy",
    "docs",
]

norecursedirs = [
    "_build",
]
astropy_header = true
doctest_plus = "enabled"
text_file_format = "rst"
addopts = [
    "--doctest-rst",
    "--ignore=docs/_build",
]
doctest_optionflags = [
    "FLOAT_CMP",
    "IGNORE_EXCEPTION_DETAIL",
]

[tool.coverage.run]
omit = [
    "src/tilepy/_dev_version*",
    "*/tilepy/_dev_version*",
]

[tool.coverage.report]
exclude_also = [
    # Don't complain about packages we have installed
    "except ImportError",
    # Don't complain if tests don't hit assertions
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain about script hooks
    "def main\\(.*\\):",
    # Ignore branches that don't pertain to this version of Python
    "pragma: py{ignore_python_version}",
    # Don't complain about IPython completion helper
    "def _ipython_key_completions_",
]

[tool.mypy]
exclude = ["^docs/"]
ignore_missing_imports = true

[tool.codespell]
ignore-words-list = """
    aas,
    sav,
    ser,
    ToO,
    ToOs,
"""
